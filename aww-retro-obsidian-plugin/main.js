/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => AwwRetro
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var AwwRetro = class extends import_obsidian.Plugin {
  async onload() {
    console.log("loading AwwRetro plugin");
    this.registerEvent(
      this.app.vault.on("modify", this.handleFileModify.bind(this))
    );
  }
  onunload() {
    console.log("unloading AwwRetro plugin");
  }
  async handleFileModify(file) {
    const journalRegex = /^\d{4}(-\d{2}(-\d{2})?|-W\d{2})?\.md$/;
    if (file.name.startsWith("r") || !journalRegex.test(file.name)) {
      return;
    }
    const retroFileName = `r${file.name}`;
    const retroFilePath = file.parent.path === "/" ? retroFileName : `${file.parent.path}/${retroFileName}`;
    try {
      const content = await this.app.vault.read(file);
      const retroFile = this.app.vault.getAbstractFileByPath(retroFilePath);
      if (retroFile instanceof import_obsidian.TFile) {
        await this.app.vault.modify(retroFile, content);
      } else {
        await this.app.vault.create(retroFilePath, content);
      }
      new import_obsidian.Notice(`Retrospective file '${retroFileName}' updated.`);
    } catch (e) {
      new import_obsidian.Notice(`Error updating retrospective file: ${e.message}`);
      console.error("Error updating retrospective:", e);
    }
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgUGx1Z2luLCBURmlsZSwgTm90aWNlIH0gZnJvbSAnb2JzaWRpYW4nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBd3dSZXRybyBleHRlbmRzIFBsdWdpbiB7XG5cdGFzeW5jIG9ubG9hZCgpIHtcblx0XHRjb25zb2xlLmxvZygnbG9hZGluZyBBd3dSZXRybyBwbHVnaW4nKTtcblxuXHRcdHRoaXMucmVnaXN0ZXJFdmVudChcblx0XHRcdHRoaXMuYXBwLnZhdWx0Lm9uKCdtb2RpZnknLCB0aGlzLmhhbmRsZUZpbGVNb2RpZnkuYmluZCh0aGlzKSlcblx0XHQpO1xuXHR9XG5cblx0b251bmxvYWQoKSB7XG5cdFx0Y29uc29sZS5sb2coJ3VubG9hZGluZyBBd3dSZXRybyBwbHVnaW4nKTtcblx0fVxuXG5cdHByaXZhdGUgYXN5bmMgaGFuZGxlRmlsZU1vZGlmeShmaWxlOiBURmlsZSkge1xuXHRcdGNvbnN0IGpvdXJuYWxSZWdleCA9IC9eXFxkezR9KC1cXGR7Mn0oLVxcZHsyfSk/fC1XXFxkezJ9KT9cXC5tZCQvO1xuXG5cdFx0Ly8gSWdub3JlIGZpbGVzIHRoYXQgYXJlIG5vdCBqb3VybmFsIGZpbGVzXG5cdFx0aWYgKGZpbGUubmFtZS5zdGFydHNXaXRoKCdyJykgfHwgIWpvdXJuYWxSZWdleC50ZXN0KGZpbGUubmFtZSkpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdCByZXRyb0ZpbGVOYW1lID0gYHIke2ZpbGUubmFtZX1gO1xuXHRcdGNvbnN0IHJldHJvRmlsZVBhdGggPSBmaWxlLnBhcmVudC5wYXRoID09PSAnLycgPyByZXRyb0ZpbGVOYW1lIDogYCR7ZmlsZS5wYXJlbnQucGF0aH0vJHtyZXRyb0ZpbGVOYW1lfWA7XG5cblx0XHR0cnkge1xuXHRcdFx0Y29uc3QgY29udGVudCA9IGF3YWl0IHRoaXMuYXBwLnZhdWx0LnJlYWQoZmlsZSk7XG5cdFx0XHRjb25zdCByZXRyb0ZpbGUgPSB0aGlzLmFwcC52YXVsdC5nZXRBYnN0cmFjdEZpbGVCeVBhdGgocmV0cm9GaWxlUGF0aCk7XG5cblx0XHRcdGlmIChyZXRyb0ZpbGUgaW5zdGFuY2VvZiBURmlsZSkge1xuXHRcdFx0XHRhd2FpdCB0aGlzLmFwcC52YXVsdC5tb2RpZnkocmV0cm9GaWxlLCBjb250ZW50KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGF3YWl0IHRoaXMuYXBwLnZhdWx0LmNyZWF0ZShyZXRyb0ZpbGVQYXRoLCBjb250ZW50KTtcblx0XHRcdH1cblxuXHRcdFx0bmV3IE5vdGljZShgUmV0cm9zcGVjdGl2ZSBmaWxlICcke3JldHJvRmlsZU5hbWV9JyB1cGRhdGVkLmApO1xuXG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0bmV3IE5vdGljZShgRXJyb3IgdXBkYXRpbmcgcmV0cm9zcGVjdGl2ZSBmaWxlOiAke2UubWVzc2FnZX1gKTtcblx0XHRcdGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1cGRhdGluZyByZXRyb3NwZWN0aXZlOlwiLCBlKTtcblx0XHR9XG5cdH1cbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFBc0M7QUFFdEMsSUFBcUIsV0FBckIsY0FBc0MsdUJBQU87QUFBQSxFQUM1QyxNQUFNLFNBQVM7QUFDZCxZQUFRLElBQUkseUJBQXlCO0FBRXJDLFNBQUs7QUFBQSxNQUNKLEtBQUssSUFBSSxNQUFNLEdBQUcsVUFBVSxLQUFLLGlCQUFpQixLQUFLLElBQUksQ0FBQztBQUFBLElBQzdEO0FBQUEsRUFDRDtBQUFBLEVBRUEsV0FBVztBQUNWLFlBQVEsSUFBSSwyQkFBMkI7QUFBQSxFQUN4QztBQUFBLEVBRUEsTUFBYyxpQkFBaUIsTUFBYTtBQUMzQyxVQUFNLGVBQWU7QUFHckIsUUFBSSxLQUFLLEtBQUssV0FBVyxHQUFHLEtBQUssQ0FBQyxhQUFhLEtBQUssS0FBSyxJQUFJLEdBQUc7QUFDL0Q7QUFBQSxJQUNEO0FBRUEsVUFBTSxnQkFBZ0IsSUFBSSxLQUFLLElBQUk7QUFDbkMsVUFBTSxnQkFBZ0IsS0FBSyxPQUFPLFNBQVMsTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLE9BQU8sSUFBSSxJQUFJLGFBQWE7QUFFckcsUUFBSTtBQUNILFlBQU0sVUFBVSxNQUFNLEtBQUssSUFBSSxNQUFNLEtBQUssSUFBSTtBQUM5QyxZQUFNLFlBQVksS0FBSyxJQUFJLE1BQU0sc0JBQXNCLGFBQWE7QUFFcEUsVUFBSSxxQkFBcUIsdUJBQU87QUFDL0IsY0FBTSxLQUFLLElBQUksTUFBTSxPQUFPLFdBQVcsT0FBTztBQUFBLE1BQy9DLE9BQU87QUFDTixjQUFNLEtBQUssSUFBSSxNQUFNLE9BQU8sZUFBZSxPQUFPO0FBQUEsTUFDbkQ7QUFFQSxVQUFJLHVCQUFPLHVCQUF1QixhQUFhLFlBQVk7QUFBQSxJQUU1RCxTQUFTLEdBQUc7QUFDWCxVQUFJLHVCQUFPLHNDQUFzQyxFQUFFLE9BQU8sRUFBRTtBQUM1RCxjQUFRLE1BQU0saUNBQWlDLENBQUM7QUFBQSxJQUNqRDtBQUFBLEVBQ0Q7QUFDRDsiLAogICJuYW1lcyI6IFtdCn0K
